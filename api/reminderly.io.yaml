openapi: 3.0.0
info:
  version: "1.0.0-s4"
  title: Reminderly.io UI
  description: This is the reminderly.io UI API
security:
  - accessCode:
      - read
      - write
paths:
  /client:
    get:
      summary: Get all clients listed
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - client
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a client (company)
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - client
      responses:
        '200':
          description: OK
  '/client/{id}':
    get:
      summary: Get a client's information
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - client
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    put:
      summary: Update client (company) information
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - client
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a client from the system
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - client
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /campaign:
    get:
      summary: Get campaigns for current company
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - campaigns
      responses:
        '200':
          description: OK
    post:
      summary: Create a campaign
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - campaigns
      responses:
        '200':
          description: OK
  '/campaign/{id}':
    get:
      summary: Get a campaign by id
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - campaigns
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    put:
      summary: Update a campaign
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - campaigns
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a campaign
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - campaigns
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /packet:
    get:
      summary: Get data packets for the current company
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - packet
      responses:
        '200':
          description: OK
    post:
      summary: Create a packet for the current company
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - packet
      responses:
        '200':
          description: OK
  '/packet/{id}':
    get:
      summary: Get a packet by id
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - packet
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    # DO NOT SUPPORT UPDATING A DATA PACKET
    # put:
    #   summary: Server example operation
    #   description: >-
    #     This is an example operation to show how security is applied to the
    #     call.
    #   tags:
    #     - packet
    #   parameters:
    #     - name: id
    #       in: path
    #       description: ID of pet to fetch
    #       required: true
    #       schema:
    #         type: integer
    #         format: int64
    #   responses:
    #     '200':
    #       description: OK
    delete:
      summary: Remove a data packet
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - packet
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /purchase:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - billing
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - billing
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  '/purchase/{id}':
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - billing
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /credits:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - billing
      responses:
        '200':
          description: OK
  /dashboard:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - reports
      responses:
        '200':
          description: OK
  '/report/{name}':
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - reports
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /user:
    get:
      summary: Get list of users
      description: >-
        This returns a list of users and their information
      tags:
        - user
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      responses:
        '200':
          description: OK
  /user/login:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - user
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - user
      responses:
        '200':
          description: OK
  /user/logout:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - user
      responses:
        '200':
          description: OK
  /user/timeout:
    get:
      summary: Server example operation
      description: >-
        This is an example operation to show how security is applied to the
        call.
      tags:
        - user
      responses:
        '200':
          description: OK
  /user/ping:
    get:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      responses:
        '200':
          description: OK
  /user/forgotpassword:
    get:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      responses:
        '200':
          description: OK
  '/user/{id}':
    get:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    put:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    delete:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - user
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK

    #Policies
  '/policy/{id}':
    get:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - policies
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    put:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - policies
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    delete:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - policies
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /policy:
    get:
      summary: Get list of policies
      description: >-
        This returns a list of users and their information
      tags:
        - policies
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - policies
      responses:
        '200':
          description: OK
  '/role/{id}':
    get:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - roles
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    put:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - roles
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    delete:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - roles
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /role:
    get:
      summary: Get list of roles
      description: >-
        This returns a list of roles and their information
      tags:
        - roles
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          required: false
      responses:
        '200':
          description: OK
    post:
      summary: Server example operation
      description: >-
          This is an example operation to show how security is applied to the
          call.
      tags:
        - roles
      responses:
        '200':
          description: OK
  /role/assign/user:
    post:
        summary: Create a role-user assignment
        description: >-
            This is an example operation to show how security is applied to the
            call.
        tags:
          - role assignment
        responses:
          '200':
            description: OK
    delete:
        summary: Remove a role-user assignment
        description: >-
            This is an example operation to show how security is applied to the
            call.
        tags:
          - role assignment
        responses:
          '200':
            description: OK
  /role/assign/policy:
    post:
        summary: Create a role-policy assignment
        description: >-
            This is an example operation to show how security is applied to the
            call.
        tags:
          - role assignment
        responses:
          '200':
            description: OK
    delete:
        summary: Remove a role-policy assignment
        description: >-
            This is an example operation to show how security is applied to the
            call.
        tags:
          - role assignment
        responses:
          '200':
            description: OK
  /ping:
    get:
      summary: Server heartbeat operation
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      tags:
        - system
      security: []
      responses:
        '200':
          description: OK

servers:
  - url: 'https://virtserver.swaggerhub.com/reminderly/reminderly-ui/v1'
components:
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'http://reminderly.io/oauth/auth'
          tokenUrl: 'http://reminderly.io/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources