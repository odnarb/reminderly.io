-- need to track changes in db
-- need logging tables
-- need log offloaders

TODO: Need contact method table ?
TODO: Need contact status table ?


company
    id
    name
    alias (mnemonic?)
    details JSON
    /*
        basic information..
        contact details..
        billing details..
        address_1
        address_2
        address_3
        city
        state
        zip
        technical_contact_first_name
        technical_contact_last_name
    */
    active
    updated_at
    created_at


log_company
    id
    company_id
    user_id
    details JSON
    updated_at
    created_at


groups
    id
    name
    updated_at
    created_at


log_groups
    id
    group_id
    user_id
    details JSON
    updated_at
    created_at


-- so companies can be part of a group, set one as master
company_group
    id
    group_id
    company_id
    master (0 or 1)
    updated_at
    created_at


customer
    id
    company_id
    details JSON
    active
    updated_at
    created_at


log_customer
    id
    customer_id
    user_id
    details JSON
    updated_at
    created_at


company_apps
    id
    company_id
    name
    restrict_to_customer_id
    updated_at
    created_at


log_company_apps
    id
    company_app_id
    user_id
    details JSON
    updated_at
    created_at


company_apps_restriction
    id
    company_app_id
    customer_id
    updated_at
    created_at


log_company_apps_restriction
    id
    company_apps_restriction_id
    user_id
    details JSON
    updated_at
    created_at


company_api
    id
    company_apps_id
    api_id
    api_key
    updated_at
    created_at


log_company_api
    id
    company_app_id
    user_id
    details JSON
    updated_at
    created_at


users
    id
    password_hash
    first_name
    last_name
    email_address
    phone_number (this is primarily for 2FA within the system)
    locked
    login_attempts
    created_at
    updated_at


log_users
    id
    user_id
    details JSON
    updated_at
    created_at


users_passwords
    id
    password_hash
    updated_at
    created_at


log_users_passwords
    id
    user_id
    details JSON
    updated_at
    created_at


-- these need to be fleshed out, primarily for the UI of the system
-- role company restriction (or allow list)
role
    id
    name
    description
    created_at
    updated_at


log_role
    id
    role_id
    user_id
    details JSON
    updated_at
    created_at


policy
    id
    name
    description
    module
    function
    created_at
    updated_at


log_policy
    id
    policy_id
    user_id
    details JSON
    updated_at
    created_at


roles_policies
    id
    role_id
    policy_id
    created_at
    updated_at


log_roles_policies
    id
    roles_policies_id
    user_id
    details JSON
    updated_at
    created_at


user_role
    id
    user_id
    role_id
    created_at
    updated_at


log_user_role
    id
    user_role_id
    user_id
    details JSON
    updated_at
    created_at


shards
    id
    state
    zip


customer_shard
    rule, not a table.. based on customer state and zip (if zip is available)
    --need a zip code - to region lookup or algo


company_location
    id
    company_id
    name
    address_1
    address_2
    city
    state
    zip
    updated_at
    created_at


log_company_location
    id
    company_location_id
    user_id
    details JSON
    updated_at
    created_at


##redundant? does company_load_map remove this requirement?
customer_xref
    customer_id
    external_customer_id
    updated_at
    created_at


/*
data ingest / file ingest
sources
-------------
    UI -> Excel-to-csv (self-inspection, mapping fields) ?
    excel-to-csv-to-s3
    UI -> CSV upload
    HTTPS->CSV->DB import
    csv-to-s3
    API
        api-to-s3
    Direct SQL
        push or pull
    Google Assistant?
    Google Calendar?
*/

-- consider: what to do with additional data? overwrite / flush / append?
data_ingest_source
    id
    name
    description
    created_at
    updated_at


log_data_ingest_source
    id
    data_ingest_source_id
    user_id
    details JSON
    updated_at
    created_at


data_ingest_stage
    id
    name
    description
    updated_at
    created_at


log_data_ingest_source
    id
    data_ingest_source_id
    user_id
    details JSON
    updated_at
    created_at


data_packet
    id
    data_ingest_source_id
    data_ingest_stage_id
    company_id
    metadata (JSON)
        { location, filename, filesize, etc }
    created_at
    updated_at


-- this would be a more visible
-- log the stages a packet  is in
log_data_packet
    id
    data_packet_id
    user_id
    details JSON
    updated_at
    created_at


-- allow client/cust support to reset stage?

-- is this necessary if we're using json for the data field?
company_load_map
    #this resolves the remote company data fields to fields mapped into the system
    #this also allows companies to have several load maps to be active
        #then each import (or data feed, or file) needs to reference a company_load_map.id
    #this can also remove the requirement of having a "customer_xref" table..?
    id
    company_id
    load_name
    load_map (JSON) { firstname: first_name, lastname: last_name, doctor_id: customer_id, etc }
    system_name (this is just meta data)
    system_version (this is just meta data)
    updated_at
    created_at


log_company_load_map
    id
    company_load_map_id
    user_id
    details JSON
    updated_at
    created_at


field mapping
-------------------
template
    per-company or per-customer defined
        --if commercial or schools, no need for "customer",
            or can use big school districts and delegate to Principals at each school
    field cleaning / validation
    messaging setup
        sms
            templates
        phone
            snippets, templates
        email
            spoof address (tier-1 clients ONLY)
            html email templates (tier-2 clients and above)


-- they choose what to match on
    --needs to be at least first name, last name, phone|email
contact_blocks
    id
    criteria JSON (first_name, last_name, phone_number, etc)
    updated_at
    created_at


log_contact_blocks
    id
    contact_blocks_id
    user_id
    details JSON
    updated_at
    created_at


messaging
------------------

-- message functions are crude pointers to a mysql function.. ? (date, time, provider name)
-- as well as data (depends on the load map)
/*
- the '{}' brackets mark the beginning of template mode.. or template language
- available template methods are:
    {data.[property]}
    {data.appointment_date|date|MM-DD-YYYY HH:MM:ss}
-You have an appointment on {data.appointment_date|date|MM-DD-YYYY HH:MM:ss} with {data.provider|name}
- {data.first_name} - capitalize the first letter, this is a proper name
- {data.last_name} - capitalize the first letter, this is a proper name
- {data.location} - capitalize the first letter, this is a proper name
- {company.name}
- {company.phone_number}
*/
-- this should
message_functions
    id
    name
    created_at
    updated_at


global_phone_templates
    template_id
    name
    type (HealthCare, School, Utilities, Commercial, etc)
    message  (JSON)
        message contains a JSON structure or array with message snippet details
        will be tts and can contain message tags and functions
    updated_at
    created_at


phone_templates
    template_id
    customer_id
    company_id
    name
    message  (JSON)
        message contains a JSON structure or array with message snippet details
    updated_at
    created_at


global_sms_templates
    template_id
    name
    message
        message is a string with message tags and functions
    updated_at
    created_at


sms_templates
    template_id
    customer_id
    company_id
    name
    message
        message is a string with message tags and functions
    updated_at
    created_at


global_email_templates (these are templates designed by us and customers have access to)
    template_id
    html_email
    raw_text
    updated_at
    created_at


email_templates
    template_id
    customer_id
    company_id
    html_email
    raw_text
    updated_at
    created_at


global_confirmation_templates
    #this is for 

-- wth is this?
flags
    id
    flag
    description


data cleaning
    apply company rules based on field mapping
    filter duplicates

outbound rules
    auto responses
    days offset


-- consider the limitation of the json column here..
    -- maybe not a big deal
-- max size is server's max-allowed-packet size. defauly is 64MB
message
    id
    company_id
    customer_id
    data (JSON)
        -- { first_name, last_name, middle_name, phone_number, email_address, appointment_date, patient_id, customer, customer_id, etc... }
    contact_method [phone, email, sms]
    contact_date (UTC time)
    processed (various flags/states of contacting in system queueing)
    contact_status {message sent, contacted, failed, etc}
    contact_status_description {why it failed, etc}
    raw_response [DTMF, character, word, raw data]
    created_at
    updated_at


log_message
    id
    message_id
    user_id
    details JSON
    updated_at
    created_at


messages_history
    same fields as contact_records

messages_history_history ?
    same fields as contact_records


--proc moves data to history
    --removes entries from log tables

sms_queue (transient)
    message_id
    to_phone
    from_phone
    message_data
    contact_date
    priority
    created_at
    updated_at


phone_queue (transient)
    message_id
    to_phone
    from_phone
    message_data
    contact_date
    priority
    created_at
    updated_at


email_queue (transient)
    message_id
    to_email
    from_email
    reply_to
    message_data (includes HTML and text-only as a backup)
    contact_date
    priority
    created_at
    updated_at


message_updates (sms sent, bounces, complaints, rejects, etc)
    id
    message_id
    contact_method
    status JSON
    created_at
    updated_at


message_updates_history
    id
    message_id
    contact_method
    status JSON
    created_at
    updated_at


-- different tiers?
credit_prices
    id
    credits_package -- 5000, 20000, 50000
    price_per_credit -- .10, .08, .06
    created_at
    updated_at


log_price
    id
    company_id
    created_at
    updated_at



other features
-----------------
survey
url shortener
