- minus sign is just listing an item
x- means that item is done
-------------------------------------------

x- create db

-Major re-do:
    split messages into per-data packets.. this will greatly increase the speed of data retrieved when there are thousands of customers
    each campaign gets its own sets of tables for data tracking, message updates, etc.


- plan api gateway / api endpoints for supporting the platform
- write with swagger
    - need to build out responses, error codes, response body, request body requirements
    - might be good to create a folder structure to organize the yaml definition, since a single yaml file is quite large to manage


- write queries based on new data packet approach
    - this will need to be translated into the reminderly.io library
    - once this is written the DB schema might be less prone to big changes

- write stored procs
    - this will be nice for translating table names for reporting
    - move messages in data packets or mark them as ready

- stored procs for maintenance fleshed out
    - maybe a little bit here.

- plan indices
- write indices
- create tests for failures ..?
- create tests (library-level, and library-to-db)


----------------------------------------------------

phase 1:
    plan/write db tables
    plan/write procs to support data flow
    test packet loading and data flow through system
        --small tests: 1,2,5 packets of data
            --what else do we want to track and log about data loading, messaging, etc
        --big tests: 100,1000,10000, etc packets of data

----------------------------------------------------

phase 2:
    app/interface
        reporting
    user analytics
        track user interactions with the system -- users most likely to respond and respond postively to surveys and reviews
    unit testing

----------------------------------------------------

phase 3:
    user security
    metrics and alarms
    ci/cd

phase 4:
    engineering issue tracking
    disaster recovery

phase 5:
    cloud formation
    api
